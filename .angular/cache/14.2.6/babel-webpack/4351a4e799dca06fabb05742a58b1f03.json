{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction ImgComponent_img_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"img\", 2);\n    i0.ɵɵlistener(\"load\", function ImgComponent_img_0_Template_img_load_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r3 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r3.imgLoaded());\n    })(\"error\", function ImgComponent_img_0_Template_img_error_0_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r5.imgError());\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r0.img, i0.ɵɵsanitizeUrl);\n  }\n}\n\nfunction ImgComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"img\", 3);\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"src\", ctx_r2.imageDefault, i0.ɵɵsanitizeUrl);\n  }\n}\n\nexport class ImgComponent {\n  // counter = 0;\n  // counterFn: number | undefined;\n  constructor() {\n    this.img = '';\n    this.alt = '';\n    this.loaded = new EventEmitter();\n    this.imageDefault = './assets/images/default.png'; // before render\n    // NO async -- once time\n    // console.log('constructor', 'imgValue =>', this.img);\n  } // eslint-disable-next-line @angular-eslint/no-input-rename\n\n\n  set changeImg(newImg) {\n    this.img = newImg; // console.log('change just img  =>' ,this.img);\n    // code\n  } // ngOnChanges(changes: SimpleChanges) {\n  //   // before - during render\n  //   // changes inputs -- multiples times\n  //   console.log('ngOnChanges', 'imgValue =>', this.img);\n  //   console.log('changes', changes);\n  //   // if (changes.) {\n  //   //   // code\n  //   // }\n  // }\n  // ngOnInit(): void {\n  //   // before render\n  //   // async - fetch -- once time\n  //   console.log('ngOnInit', 'imgValue =>', this.img);\n  //   // this.counterFn = window.setInterval(() => {\n  //   //   this.counter += 1;\n  //   //   console.log('run counter');\n  //   // }, 1000);\n  // }\n  // ngAfterViewInit() {\n  //   // after render\n  //   // handler children -- once time\n  //   console.log('ngAfterViewInit');\n  // }\n  // ngOnDestroy() {\n  //   // delete -- once time\n  //   console.log('ngOnDestroy');\n  //   // window.clearInterval(this.counterFn);\n  // }\n\n\n  imgError() {\n    this.img = this.imageDefault;\n  }\n\n  imgLoaded() {\n    // console.log('log hijo');\n    this.loaded.emit(this.img);\n  }\n\n}\n\nImgComponent.ɵfac = function ImgComponent_Factory(t) {\n  return new (t || ImgComponent)();\n};\n\nImgComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ImgComponent,\n  selectors: [[\"app-img\"]],\n  inputs: {\n    changeImg: [\"img\", \"changeImg\"],\n    alt: \"alt\"\n  },\n  outputs: {\n    loaded: \"loaded\"\n  },\n  decls: 3,\n  vars: 2,\n  consts: [[3, \"src\", \"load\", \"error\", 4, \"ngIf\", \"ngIfElse\"], [\"elseImg\", \"\"], [3, \"src\", \"load\", \"error\"], [\"alt\", \"\", 3, \"src\"]],\n  template: function ImgComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵtemplate(0, ImgComponent_img_0_Template, 1, 1, \"img\", 0);\n      i0.ɵɵtemplate(1, ImgComponent_ng_template_1_Template, 1, 1, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n    }\n\n    if (rf & 2) {\n      const _r1 = i0.ɵɵreference(2);\n\n      i0.ɵɵproperty(\"ngIf\", ctx.img)(\"ngIfElse\", _r1);\n    }\n  },\n  dependencies: [i1.NgIf],\n  styles: [\"img[_ngcontent-%COMP%] {\\n  max-width: 100%;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImltZy5jb21wb25lbnQuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLGVBQUE7QUFDRiIsImZpbGUiOiJpbWcuY29tcG9uZW50LnNjc3MiLCJzb3VyY2VzQ29udGVudCI6WyJpbWcge1xuICBtYXgtd2lkdGg6IDEwMCU7XG59XG4iXX0= */\"]\n});","map":{"version":3,"mappings":"AAAA,SAA2CA,YAA3C,QAAmH,eAAnH;;;;;;;;ICAAC;IAAKA;MAAAA;MAAA;MAAA,OAAQA,kCAAR;IAAmB,CAAnB,EAAoB,OAApB,EAAoB;MAAAA;MAAA;MAAA,OAAUA,iCAAV;IAAoB,CAAxC;IAALA;;;;;IAA+CA;;;;;;IAG7CA;;;;;IAAKA;;;;ADIP,OAAM,MAAOC,YAAP,CAAmB;EAcvB;EACA;EAEAC;IAfA,WAAc,EAAd;IASS,WAAc,EAAd;IACC,cAAS,IAAIH,YAAJ,EAAT;IACV,oBAAe,6BAAf,CAIA,CACE;IACA;IACA;EACD,CArBsB,CAIvB;;;EAEa,IAATI,SAAS,CAACC,MAAD,EAAe;IAC1B,KAAKC,GAAL,GAAWD,MAAX,CAD0B,CAE1B;IACA;EACD,CAVsB,CAuBvB;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;EAEA;EACA;EACA;EACA;EACA;;;EAEAE,QAAQ;IACN,KAAKD,GAAL,GAAW,KAAKE,YAAhB;EACD;;EAEDC,SAAS;IACP;IACA,KAAKC,MAAL,CAAYC,IAAZ,CAAiB,KAAKL,GAAtB;EACD;;AA9DsB;;;mBAAZJ;AAAY;;;QAAZA;EAAYU;EAAAC;IAAAT;IAAAU;EAAA;EAAAC;IAAAL;EAAA;EAAAM;EAAAC;EAAAC;EAAAC;IAAA;MCPzBlB;MAEAA;;;;;;MAF4DA,+BAAW,UAAX,EAAWmB,GAAX","names":["EventEmitter","i0","ImgComponent","constructor","changeImg","newImg","img","imgError","imageDefault","imgLoaded","loaded","emit","selectors","inputs","alt","outputs","decls","vars","consts","template","_r1"],"sourceRoot":"","sources":["C:\\Users\\ricar\\OneDrive\\Documentos\\componentes-servicios-angular\\store\\src\\app\\components\\img\\img.component.ts","C:\\Users\\ricar\\OneDrive\\Documentos\\componentes-servicios-angular\\store\\src\\app\\components\\img\\img.component.html"],"sourcesContent":["import { Component, OnInit, Input, Output, EventEmitter, OnChanges, AfterViewInit, OnDestroy, SimpleChanges } from '@angular/core';\n\n@Component({\n  selector: 'app-img',\n  templateUrl: './img.component.html',\n  styleUrls: ['./img.component.scss']\n})\nexport class ImgComponent {\n\n  img: string = '';\n\n  // eslint-disable-next-line @angular-eslint/no-input-rename\n  @Input('img')\n  set changeImg(newImg: string) {\n    this.img = newImg;\n    // console.log('change just img  =>' ,this.img);\n    // code\n  }\n  @Input() alt: string = '';\n  @Output() loaded = new EventEmitter<string>();\n  imageDefault = './assets/images/default.png';\n  // counter = 0;\n  // counterFn: number | undefined;\n\n  constructor() {\n    // before render\n    // NO async -- once time\n    // console.log('constructor', 'imgValue =>', this.img);\n  }\n\n  // ngOnChanges(changes: SimpleChanges) {\n  //   // before - during render\n  //   // changes inputs -- multiples times\n  //   console.log('ngOnChanges', 'imgValue =>', this.img);\n  //   console.log('changes', changes);\n  //   // if (changes.) {\n  //   //   // code\n  //   // }\n  // }\n\n  // ngOnInit(): void {\n  //   // before render\n  //   // async - fetch -- once time\n  //   console.log('ngOnInit', 'imgValue =>', this.img);\n  //   // this.counterFn = window.setInterval(() => {\n  //   //   this.counter += 1;\n  //   //   console.log('run counter');\n  //   // }, 1000);\n  // }\n\n  // ngAfterViewInit() {\n  //   // after render\n  //   // handler children -- once time\n  //   console.log('ngAfterViewInit');\n  // }\n\n  // ngOnDestroy() {\n  //   // delete -- once time\n  //   console.log('ngOnDestroy');\n  //   // window.clearInterval(this.counterFn);\n  // }\n\n  imgError() {\n    this.img = this.imageDefault;\n  }\n\n  imgLoaded() {\n    // console.log('log hijo');\n    this.loaded.emit(this.img);\n  }\n\n}\n","<img (load)=\"imgLoaded()\" (error)=\"imgError()\" [src]=\"img\" *ngIf=\"img; else elseImg\">\n<!-- <h3>{{ counter }}</h3> -->\n<ng-template #elseImg>\n  <img [src]=\"imageDefault\" alt=\"\">\n</ng-template>\n"]},"metadata":{},"sourceType":"module"}